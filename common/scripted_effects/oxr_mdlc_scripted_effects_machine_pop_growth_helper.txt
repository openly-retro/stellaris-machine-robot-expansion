# Effects to compound fractional pop assembly and create add'l pops


# Called on the event timer and add X pops to each pop group
oxr_mdlc_planet_add_pops_from_fractional_compound_pop_assembly = {

	if = {
		limit = {
			NOT = { has_modifier = oxr_mdlc_country_machine_pop_growth_helper }
		}
		add_modifier = {
			modifier = oxr_mdlc_country_machine_pop_growth_helper
			days = -1
			clear_on_owner_change = yes
		}
	}

	# set_variable = {
	# 	which = oxr_mdlc_planet_machine_pop_growth_total_for_display
	# 	value = modifier:planet_pop_assembly_add
	# }
    export_modifier_to_variable = {
        modifier = planet_pop_assembly_add
        variable = oxr_mdlc_planet_machine_pop_growth_total_for_display
    }
    log = "This month's Machine pop assembly is \\[This.oxr_mdlc_planet_machine_pop_growth_total_for_display] "

	if = {
		limit = {
			NOT = {
				is_variable_set = oxr_mdlc_planet_machine_pop_growth_running_compounded_total
			}
		}
		set_variable = {
			which = oxr_mdlc_planet_machine_pop_growth_running_compounded_total
			value = 0
		}
	}
	# Get this month's fractional amount
	set_variable = {
		which = oxr_mdlc_planet_machine_pop_growth_this_months_fraction
		value = modifier:planet_pop_assembly_add
	}
	# change 5.6 to 0.6, for example
	modulo_variable = {
		which = oxr_mdlc_planet_machine_pop_growth_this_months_fraction
		value = 1
	}
	# Add this month's fraction to the stored amount
	change_variable = {
		which = oxr_mdlc_planet_machine_pop_growth_running_compounded_total
		value = oxr_mdlc_planet_machine_pop_growth_this_months_fraction
	}
	# clear_variable = oxr_mdlc_planet_machine_pop_growth_this_months_fraction

	# check if leftover fraction is > 1
	if = {
		limit = {
			check_variable = {
				which = oxr_mdlc_planet_machine_pop_growth_running_compounded_total
				value >= 1
			}
		}
		# Temporarily show that this month's pop growth was bumped up by 1
		change_variable = {
			which = oxr_mdlc_planet_machine_pop_growth_total_for_display
			value = 1
		}
		subtract_variable = {
			which = oxr_mdlc_planet_machine_pop_growth_running_compounded_total
			value = 1
		}
	}
	# Drop fractional amount off of xvcv_mdlc_bio_robot_growth_rate_per_month_var
	# because we are tracking it elsewhere
	floor_variable = oxr_mdlc_planet_machine_pop_growth_total_for_display

	every_owned_pop_group = {
		limit = {
			oxr_mdlc_pop_group_is_machine = yes
		}
		add_pop_amount = 1
		log = "Added 1 pops to \\[This.GetName] from fractional pop assembly rollover"
	}
}
