# Jobs, originally by XVCV
xvcv_mdlc_uplink_node_coordinator = {
	category = complex_drone

	swappable_data = {
		default = {
			condition_string = DRONE_JOB_TRIGGER
			building_icon = xvcv_mdlc_building_uplink_node_facility
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	planet_modifier = {
		planet_jobs_produces_mult = 0.05
		planet_crime_no_happiness_mult = -0.20
	}
	tags = {
		xvcv_mdlc_uplink_node_coordinator
		oxr_mdlc_job_tag_unity
		unity
	}

	resources = {
		category = planet_bureaucrats
		produces = { unity = 4 }
		upkeep = { energy = 4 }
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|xvcv_mdlc_uplink_node_coordinator|RESOURCE|unity|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}
xvcv_mdlc_fake_algorithm = {
	category = corrupt_drone
	is_capped_by_modifier = yes
	can_set_priority = no
	contributes_to_diplo_weight = no
	
	swappable_data = {
		default = {
			building_icon = building_machine_capital
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	
	possible = {
		planet = { has_modifier = xvcv_mdlc_rogue_network }
	}
	tags = {
		xvcv_mdlc_fake_algorithm
		oxr_mdlc_job_tag_crime
		crime
	}

	resources = {
		category = planet_jobs
		upkeep = {
			energy = 2
			unity = 2
		}
	}
		
	weight = {
		weight = @criminal_job_weight
	}
}
xvcv_mdlc_rogue_network = {
	category = corrupt_drone
	is_capped_by_modifier = yes
	can_set_priority = no
	contributes_to_diplo_weight = no

	swappable_data = {
		default = {
			building_icon = building_autochthon_monument
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}
	tags = {
		xvcv_mdlc_rogue_network
		oxr_mdlc_job_tag_crime
		crime
	}

	possible_precalc = can_fill_drone_job

	possible = {
		planet = { has_modifier = xvcv_mdlc_rogue_network }
	}

	planet_modifier = {
		planet_jobs_energy_produces_mult = -0.01
	}

	resources = {
		category = planet_jobs
		upkeep = {
			energy = 5
			unity = 5
			influence = 0.1
		}
	}

	weight = {
		weight = @criminal_job_weight
	}
}
xvcv_mdlc_bio_robot_clone_drone = {
	category = complex_drone

	swappable_data = {
		default = {
			condition_string = DRONE_JOB_TRIGGER
			building_icon = building_clone_vats
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	planet_modifier = {
		xvcv_mdlc_bio_robot_growth_add = 1
	}
	tags = {
		xvcv_mdlc_bio_robot_clone_drone
		oxr_mdlc_job_tag_pop_cloning
		pop_assembly
	}

	resources = {
		category = planet_jobs
		produces = { society_research = 8 }
		upkeep = {
			alloys = 4
			food = 4
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		modifier = {
			factor = 0.01
			exists = planet
			planet = { xvcv_mdlc_bio_robot_auto_growth_not_possible_planet_trigger = yes }
		}
	}
}
xvcv_mdlc_bio_robot_clone_technician = {
	category = specialist

	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_clone_vats
		}
	}

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_specialist_job
	tags = {
		xvcv_mdlc_bio_robot_clone_technician
		oxr_mdlc_job_tag_pop_cloning
	}

	planet_modifier = {
		xvcv_mdlc_bio_robot_growth_add = 1
	}

	resources = {
		category = planet_jobs
		produces = { society_research = 8 }
		upkeep = {
			alloys = 4
			food = 4
		}
	}

	weight = {
		weight = @high_prio_specialist_job_weight
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			# in pop_group scope
			planet = { has_building = xvcv_mdlc_building_bio_robot_clone_plants }
		}
		modifier = {
			factor = 0.5
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
		modifier = {
			factor = 0.01
			exists = planet
			planet = { xvcv_mdlc_bio_robot_auto_growth_not_possible_planet_trigger = yes }
		}
	}
}
# xvcv_mdlc_installation_dismantler = {
# 	category = worker

# 	swappable_data = {
# 		default = {
# 			condition_string = WORKER_JOB_TRIGGER
# 			building_icon = building_ruined
# 		}
# 	}

# 	possible_pre_triggers = {
# 		has_owner = yes
# 		is_being_purged = no
# 		is_being_assimilated = no
# 		is_sapient = yes
# 	}

# 	possible_precalc = can_fill_worker_job

# 	resources = {
# 		category = planet_miners
# 		produces = { minerals = 6 }
# 		upkeep = {
# 			trigger = {
# 				exists = owner
# 				owner = { has_edict = mining_subsidies }
# 			}
# 			energy = 0.5
# 		}
# 	}

# 	weight = {
# 		weight = @worker_job_weight
# 		mult = value:job_weights_modifier|JOB|xvcv_mdlc_installation_dismantler|RESOURCE|minerals|
# 		modifier = {
# 			factor = 10
# 			is_enslaved = yes
# 			can_take_servant_job = no
# 			NOT = { has_slavery_type = { type = slavery_indentured } }
# 		}
# 		modifier = {
# 			factor = 3
# 			OR = {
# 				is_non_sapient_robot = yes
# 				is_shackled_robot = yes
# 			}
# 			can_take_servant_job = no
# 			owner = { has_technology = tech_droid_workers }
# 		}
# 		modifier = {
# 			factor = 200
# 			OR = {
# 				is_non_sapient_robot = yes
# 				is_shackled_robot = yes
# 			}
# 			can_take_servant_job = no
# 			owner = { NOT = { has_technology = tech_droid_workers } }
# 		}
# 		modifier = {
# 			factor = 0.25
# 			can_take_servant_job = yes
# 		}

# 		# low income modifier
# 		modifier = {
# 			factor = 1.1
# 			exists = planet
# 			planet = {
# 				has_available_jobs = xvcv_mdlc_installation_dismantler
# 			}
# 			exists = owner
# 			owner = {
# 				is_ai = yes
# 				has_monthly_income = {
# 					resource = minerals
# 					value < 0
# 				}
# 			}
# 		}
# 	}
# }

# EOF
