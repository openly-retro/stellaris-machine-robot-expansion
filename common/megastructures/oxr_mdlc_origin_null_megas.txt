oxr_mdlc_origin_null_stellar_formatter = {
	# entity = "xvcv_mdlc_planet_cracker_entity"
	# portrait = "GFX_megastructure_xvcv_mdlc_planet_cracker"
	entity = "hyper_relay_entity"
	construction_entity = "hyper_relay_entity"
	place_entity_on_planet_plane = yes
	show_galactic_map_icon = no
	show_in_outliner = no
	use_planet_resource = yes
	build_time = 1  # change this later :)
	entity_offset = { x = 0 y = 0 }
	scales_with_planet = yes

	construction_blocks_and_blocked_by = none

	dismantle_cost = { category = megastructures cost = { energy = 1 } }
	dismantle_time = 1
	dismantle_potential = { always = yes }
	dismantle_possible = { always = yes }

	potential = {
		# has_oxr_mdlc_civic_planet_eaters = yes
		has_oxr_mdlc_country_feature_planet_eaters = yes
	}

	possible = {
		hidden_trigger = {
			exists = starbase
		}
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}
	placement_rules = {
		planet_possible = {
			has_moon = no
			doesnt_have_planet_flag = megastructure
		}
	}
	
	on_build_complete = {
		fromfrom.planet = {
			set_planet_flag = has_megastructure
			oxr_mdlc_planet_origin_null_formatter_entry_effect = yes
		}
		# Start yearly consumption event
		# event ....
		start_situation = {
			type = oxr_mdlc_situation_planet_decomposer_mega
			target = fromfrom.planet
		}
	}

	resources = {
		# category = station_gatherers <-- use for deposits
		category = oxr_mdlc_category_origin_null_disassembler_mega
		# cost = {
		# 	energy = 1
		# }
		produces = {
			trigger = {
				planet = {
					is_variable_set = oxr_mdlc_origin_null_planet_food_produces_tmp
				}
			}
			food = planet.oxr_mdlc_origin_null_planet_food_produces_tmp
		}
		produces = {
			trigger = {
				planet = {
					is_variable_set = oxr_mdlc_origin_null_planet_minerals_produces_tmp
				}
			}
			minerals = planet.oxr_mdlc_origin_null_planet_minerals_produces_tmp
		}
		produces = {
			trigger = {
				planet = {
					is_variable_set = oxr_mdlc_origin_null_planet_energy_produces_tmp
				}
			}
			energy = planet.oxr_mdlc_origin_null_planet_energy_produces_tmp
		}
		produces = {
			trigger = {
				planet = {
					is_variable_set = oxr_mdlc_origin_null_planet_debris_produces_tmp
				}
			}
			oxr_mdlc_resource_null_mega_debris = planet.oxr_mdlc_origin_null_planet_debris_produces_tmp
		}
	}

	on_dismantle_start = {
		fromfrom.planet = {
			# pause the consumption event
		}
	}
	on_dismantle_cancel = {
		fromfrom.planet = {
			# continue consumption event
		}
	}
	on_dismantle_complete = {
		fromfrom.planet = {
			# stop consumption and remove planet modifier
			remove_flag = has_megastructure
			remove_flag = oxr_mdlc_origin_null_stellar_formatter_placed
		}
	}
}
