# This inline script addresses the following scenarios:
# 1 - NOT rogue servitor (see oxr_mdlc_servitor)
# 2 - planet is FACTORY designation

# When in factory designation, produce 2 artisan drone output

produces = {
	trigger = {
		exists = owner
		oxr_mdlc_col_is_factory = yes
		oxr_planet_owner_is_catalytic = no
		owner = {
			NOT = { has_valid_civic = civic_machine_servitor }
		}
	}
	consumer_goods = @[ $JOBS$ * oxr_mdlc_wm_base_artisan_output ]
	mult = value:scripted_modifier_mult|MODIFIER|rikk_mdlc_world_machine_districts_efficiency|
}
# When on factory designation, minerals are used
upkeep = {
	trigger = {
		exists = owner
		oxr_mdlc_col_is_factory = yes
		oxr_planet_owner_is_catalytic = no
		owner = {
			NOT = { has_valid_civic = civic_machine_servitor }
		}
	}
	minerals = @[ $JOBS$ * oxr_mdlc_wm_base_artisan_upkeep ]
	volatile_motes = $RARE$
}
# CATALYTIC
produces = {
	trigger = {
		exists = owner
		oxr_mdlc_col_is_factory = yes
		oxr_planet_owner_is_catalytic = yes
		owner = {
			NOT = { has_valid_civic = civic_machine_servitor }
		}
	}
	consumer_goods = @[ $JOBS$ * oxr_mdlc_wm_base_artisan_catalytic_output ]
	mult = value:scripted_modifier_mult|MODIFIER|rikk_mdlc_world_machine_districts_efficiency|
}
# When on factory designation, minerals are used
upkeep = {
	trigger = {
		exists = owner
		oxr_mdlc_col_is_factory = yes
		oxr_planet_owner_is_catalytic = yes
		owner = {
			NOT = { has_valid_civic = civic_machine_servitor }
		}
	}
	food = @[ $JOBS$ * oxr_mdlc_wm_base_artisan_catalytic_upkeep ]
	volatile_motes = $RARE$
}