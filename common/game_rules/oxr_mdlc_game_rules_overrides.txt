#Root = species
#This = country
can_release_vassal_from_species = {
	root = {
		OR = {
			# Machines & Robot Expansion: Continued
			# Ahead of vanilla rules because vanilla rules can short-circuit
			# before the MRE:C trigger is evaluated
			oxr_mdlc_can_release_vassal_from_species = yes
			# Vanilla
			AND = {
				is_sapient = yes
				NOR = {
					AND = {
						has_trait = trait_machine_unit
						prev.this = { is_individual_machine = no }
					}
					AND = {
						has_trait = trait_hive_mind
						NOT = { prev.this = { has_origin = origin_progenitor_hive } }
					}
					AND = {
						NOT = { has_trait = trait_hive_mind }
						prev.this = { has_authority = auth_hive_mind }
					}
					has_trait = trait_mechanical
					can_think = no
					has_trait = trait_clone_soldier_infertile
					has_trait = trait_clone_soldier_infertile_full_potential
				}
			}
			
		}
		
	}
}

#Root = country
#This = planet
can_colonize_planet = {
	hidden_trigger = {
		exists = root
	}
	custom_tooltip = {
		fail_text = "COLONIZATION_IMPOSSIBLE_UNDER_INVESTIGATION"
		NOT = { has_planet_flag = planet_under_investigation }
	}
	custom_tooltip = {
		fail_text = "COLONIZATION_IMPOSSIBLE_DYSON_SPHERE"
		if = {
			limit = {
				is_artificial = no	# Colonizing habitats is fine
			}
			system_has_dyson_sphere = no
		}
	}
	custom_tooltip = {
		fail_text = "COLONIZATION_IMPOSSIBLE_DYSON_SPHERE_CONSTRUCTION"
		if = {
			limit = {
				system_has_dyson_sphere = no
				is_artificial = no	# Colonizing habitats is fine
			}
			NOT = {
				solar_system = {
					has_star_flag = dyson_sphere_construction
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = "COLONIZATION_IMPOSSIBLE_COSMOGENESIS_EXODUS"
		exists = root
		root = {
			NOT = { owner = { has_event_chain = cosmogenesis_planet_pickup_chain } }
		}
	}
	custom_tooltip = {
		fail_text = "COLONIZATION_IMPOSSIBLE_CRIMSON_CRAWLERS"

		if = {
			limit = {
				has_modifier = crimson_crawlers
			}
			root = {
				cares_for_crimson_crawlers = yes
			}
		}
	}

	custom_tooltip = {
		fail_text = "COLONIZATION_IMPOSSIBLE_DEFENDED_PLANET"
		NOT = { has_planet_flag = planet_defended_forbid_colonization }
	}

	custom_tooltip = {
		fail_text = "COLONIZATION_IMPOSSIBLE_SMEEGIBB_PLANET"
		NOT = { has_planet_flag = cannot_colonize_smeegibb_shelter }
	}

	custom_tooltip = {
		# Machine & Robot Expansion Continued
		fail_text = oxr_mdlc_can_colonize_planet_pc_habitat.fail_active
		NAND = {
			is_planet_class = pc_habitat
			oxr_mdlc_planet_decision_dismantle_habitat_active = yes
		}
	}
	custom_tooltip = {
		# Machine & Robot Expansion Continued
		fail_text = oxr_mdlc_can_colonize_planet.wm_is_rebooting
		oxr_mdlc_planet_world_machine_is_rebooting = yes
	}
}
can_species_be_assembled = {
	is_sapient = yes
	NOT = {
		has_trait = trait_exd
	}
	NOT = {
		AND = {
			has_trait = trait_mechanical
			root.owner = { is_individual_machine = yes }
		}
	}
	NOT = {
		AND = {
			has_virtual_species_trait = yes
			root.owner = {
				is_fallen_empire = no
				has_active_tradition = tr_virtuality_finish
			}
		}
	}
	OR = {
		AND = {
			is_robotic = yes
			root = {
				check_modifier_value = {
					modifier = planet_pop_assembly_add
					value > 0
				}
				owner = {
					NOT = { has_country_flag = synth_assembly_stopped }
				}
			}
			# Machines & Robot Expansion Continued
			has_xvcv_mdlc_trait_bio_robot = no
		}
		AND = {
			is_organic_species = yes
			if = {
				limit = {
					root.owner = { is_hive_empire = yes }
				}
				has_trait = trait_hive_mind
			}
			else_if = {
				limit = { has_budding_trait = yes }
				root = {
					any_owned_species = { is_exact_same_species = prevprev }
				}
			}
			else_if = {
				limit = { has_trait = trait_tiyanki }
				root = {
					any_owned_species = { is_exact_same_species = prevprev }
				}
			}
			else_if = {
				limit = {
					OR = {
						has_trait = trait_clone_soldier_infertile
						has_trait = trait_clone_soldier_infertile_full_potential
					}
				}
				root = {
					# Event 'clones.3' should cover this, but extra safety check.
					has_building = building_clone_army_clone_vat
					NOT = {
						check_variable = {
							which = clone_pops_missing
							value = 0
						}
					}
				}
			}
			else = {
				root = {
					OR = {
						has_building = building_clone_vats
						has_modifier = tiyanki_trophy
						owner = { has_modifier = syamelles_curse }
						AND = {
							has_building = building_posthumous_employment_center
							owner = { has_civic = civic_permanent_employment }
						}
						has_planet_flag = can_organic_assemble_flag #for mod compatibility
					}
				}
			}
		}
	}
	has_population_control = {
		type = no
		country = root.owner
	}
}

#Checks whether this species is eligible to become rulers through elections
#Root = country
#This = species
can_generate_leader_from_species = {
	is_sapient = yes
	OR = {
		# If the pop is mechanical, or country has synth leaders
		# It's saying non-mechanical pops CAN be leaders,
		# and mechanical pops cannot

		# This must be in front of the NAND because it concerns mechanical pops
		oxr_mdlc_can_generate_leader_from_species = yes
		NAND = {
			NOT = { root = { has_technology = "tech_synthetic_leaders" } }
			has_trait = "trait_mechanical"
		}
		has_citizenship_type = { type = citizenship_full country = root }
	}
}
