xvcv_mdlc_world_machines_districts = {
	parent = planet_districts
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
	 	produces
	 	upkeep
		cost
	}
}
# to encompass auto and ecu world districts
xvcv_mdlc_world_machines_industrial_districts = {
	parent = xvcv_mdlc_world_machines_districts
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	# modifier_category = planet
}

# To encompass 'xvcv_mdlc_pc_machine_auto_district_industrial'
# Which needs an economic category in order to be boosted by 
# oxr_mdlc_world_machines_building_auto_forge_2 and 3
xvcv_mdlc_world_machines_vanilla_industrial_districts = {
	parent = xvcv_mdlc_world_machines_industrial_districts
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
# to encompass ser and cpu world districts
xvcv_mdlc_world_machines_computer_districts = {
	parent = xvcv_mdlc_world_machines_districts
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = planet
}
# Added by Retro, standardized to have xvcv_ prefix for consistency
xvcv_mdlc_world_machines_food_districts = {
	parent = xvcv_mdlc_world_machines_industrial_districts
	modifier_category = planet
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
xvcv_mdlc_world_machines_mining_districts = {
	parent = xvcv_mdlc_world_machines_industrial_districts
	modifier_category = planet
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
xvcv_mdlc_world_machines_generator_districts = {
	parent = xvcv_mdlc_world_machines_industrial_districts
	modifier_category = planet
	generate_add_modifiers = {
		produces
		upkeep
		# cost
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
# alloys, nanites, living metal
xvcv_mdlc_world_machines_foundry_districts = {
	parent = xvcv_mdlc_world_machines_industrial_districts
	modifier_category = planet
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
xvcv_mdlc_world_machines_factory_districts = {
	parent = xvcv_mdlc_world_machines_industrial_districts
	modifier_category = planet
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
# standard research, astral?, dark matter?
xvcv_mdlc_world_machines_science_districts = {
	parent = xvcv_mdlc_world_machines_computer_districts
	modifier_category = planet
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
xvcv_mdlc_world_machines_unity_districts = {
	parent = xvcv_mdlc_world_machines_computer_districts
	modifier_category = planet
	generate_add_modifiers = {
	 	produces
	 	upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
# naval cap
xvcv_mdlc_world_machines_military_districts = {
	parent = xvcv_mdlc_world_machines_industrial_districts
	modifier_category = planet
	generate_add_modifiers = {
	 	produces
	 	upkeep
	}
}
# encryption, decryption, infiltration speed
# although currently covered by 'computer' districts
xvcv_mdlc_world_machines_cybersecurity_districts = {
	parent = xvcv_mdlc_world_machines_computer_districts
	modifier_category = planet
	generate_add_modifiers = {
	 	produces
	 	upkeep
	}
}
xvcv_mdlc_world_machines_housing_districts = {
	parent = xvcv_mdlc_world_machines_districts
	modifier_category = planet
	# generate_add_modifiers = {
	# 	produces
	# 	upkeep
	# }
}
xvcv_mdlc_world_machines_strategic_resource_districts = {
	parent = xvcv_mdlc_world_machines_industrial_districts
	modifier_category = planet
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
	 	produces
	 	upkeep
	}
}
xvcv_mdlc_world_machines_cooling_districts = {
	parent = xvcv_mdlc_world_machines_districts
	modifier_category = planet
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		# produces
		upkeep
	}
}
# TODO
# Maybe servitor district is better on a mechanical world ?
# Need to think about how bio-trophies will survive on these worlds
xvcv_mdlc_world_machines_servitor_districts = {
	parent = xvcv_mdlc_world_machines_districts
	modifier_category = planet
	# generate_add_modifiers = {
	# 	produces
	# 	upkeep
	# }
}
xvcv_mdlc_world_machines_assimilator_districts = {
	parent = xvcv_mdlc_world_machines_districts
	modifier_category = planet
	# generate_add_modifiers = {
	# 	produces
	# 	upkeep
	# }
}


#vanilla overwritten
pop_category_drones = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = pop_category_complex_drones
		modifier_types = { add }
		trigger = { is_pop_category = complex_drone }
	}
	triggered_produces_modifier = {
		key = pop_category_simple_drones
		modifier_types = { add }
		trigger = { is_pop_category = simple_drone }
	}
	triggered_upkeep_modifier = {
		key = pop_category_complex_drones
		modifier_types = { add }
		trigger = { is_pop_category = complex_drone }
	}
	triggered_upkeep_modifier = {
		key = pop_category_simple_drones
		modifier_types = { add }
		trigger = { is_pop_category = simple_drone }
	}
	triggered_upkeep_modifier = {
		key = pop_category_drones_xvcv_bio_robot
		modifier_types = { add }
		trigger = { has_trait = xvcv_mdlc_trait_bio_robot }
	}
}
pop_category_workers = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	triggered_upkeep_modifier = {
		key = pop_category_workers_xvcv_bio_robot
		modifier_types = { add }
		trigger = { has_trait = xvcv_mdlc_trait_bio_robot }
	}
}
pop_category_specialists = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	triggered_upkeep_modifier = {
		key = pop_category_specialists_xvcv_bio_robot
		modifier_types = { add }
		trigger = { has_trait = xvcv_mdlc_trait_bio_robot }
	}
}
pop_category_rulers = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	triggered_upkeep_modifier = {
		key = pop_category_rulers_xvcv_bio_robot
		modifier_types = { add }
		trigger = { has_trait = xvcv_mdlc_trait_bio_robot }
	}
}