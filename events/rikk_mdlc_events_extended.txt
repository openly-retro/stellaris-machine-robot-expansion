namespace = rikk_mdlc_extended

#add modifier from deviant trait
#country_event = {
#	id = rikk_mdlc_extended.01
#	hide_window = yes
#	is_triggered_only = yes
#	trigger = {
#		OR = {
#			any_owned_species = { has_trait = rikk_mdlc_trait_robotic_deviants }
#			any_owned_planet = { has_modifier = rikk_mdlc_trait_robotic_deviant_mod }
#		}
#		#can_add_extended_traits = yes
#	}
#	
#	immediate = {
#		every_owned_planet = {
#			add_modifier = {
#				modifier = rikk_mdlc_trait_robotic_deviant_mod
#				mult = value:rikk_mdlc_counter_deviants
#			}
#		}
#	}
#}

country_event = {
	id = rikk_mdlc_extended.01
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_species = { has_trait = rikk_mdlc_trait_robotic_deviants }
		has_mute_extended_machines = no
	}

	immediate = {
		every_owned_planet = {
			limit = { any_owned_species = { has_trait = rikk_mdlc_trait_robotic_deviants } }
			export_trigger_value_to_variable = {
				trigger = count_owned_pop_amount
				parameters = { limit = { has_trait = rikk_mdlc_trait_robotic_deviants } }
				variable = rikk_mdlc_count_pop_trait_robotic_deviants_var
			}
			if = {
				limit = {
					NOT = { has_deposit = rikk_mdlc_d_trait_robotic_deviants }
				}
				add_deposit = rikk_mdlc_d_trait_robotic_deviants
			}
		}
	}
}
#clear 'rikk_mdlc_d_trait_robotic_deviants' deposit when its requirement is not met
country_event = {
	id = rikk_mdlc_extended.02
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_planet = {
			has_deposit = rikk_mdlc_d_trait_robotic_deviants
			NOT = { any_owned_species = { has_trait = rikk_mdlc_trait_robotic_deviants } }
		}
		has_mute_extended_machines = no
	}

	immediate = {
		every_owned_planet = {
			limit = {
				has_deposit = rikk_mdlc_d_trait_robotic_deviants
				NOT = { any_owned_species = { has_trait = rikk_mdlc_trait_robotic_deviants } }
			}
			# oxr_mdlc_planet_clear_all_custom_deposits_of_type = {
			# 	CUSTOM_DEPOSIT_TYPE = rikk_mdlc_d_trait_robotic_deviants
			# }
			remove_deposit = rikk_mdlc_d_trait_robotic_deviants
			clear_variable = rikk_mdlc_count_pop_trait_robotic_deviants_var
		}
	}
}

#Add trait and Skill levels AI Splitting
# 'from' is the leader, this is called via on_action
country_event = {
	id = rikk_mdlc_extended.03
	hide_window = yes
	is_triggered_only = yes
	trigger = { 
		has_authority = auth_machine_intelligence
		any_owned_species = { has_trait = rikk_mdlc_trait_robotic_ai_splitting }
		from = {
			NOR = {
				is_robotic_species = no
				has_leader_flag = ai_splitting_leader_flag
			}
		}
		has_mute_extended_machines = no
	}

	immediate = {
		from = {
			if = {
				limit = { 
					ruler = {
						has_base_skill = 1
					}
				}
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_00 }
			}
			else_if = {
				limit = { 
					ruler = {
						has_base_skill = 2
					}
				}
				add_skill = 1
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_01 }
			}
			else_if = {
				limit = { 
					ruler = {
						has_base_skill = 3
					}
				}
				add_skill = 2
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_02 }
			}
			else_if = {
				limit = { 
					ruler = {
						has_base_skill = 4
					}
				}
				add_skill = 3
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_03 }
			}
			else_if = {
				limit = { 
					ruler = {
						has_base_skill = 5
					}
				}
				add_skill = 4
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_04 }
			}
			else_if = {
				limit = { 
					ruler = {
						has_base_skill = 6
					}
				}
				add_skill = 5
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_05 }
			}
			else_if = {
				limit = { 
					ruler = {
						has_base_skill = 7
					}
				}
				add_skill = 6
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_06 }
			}
			else_if = {
				limit = { 
					ruler = {
						has_base_skill = 8
					}
				}
				add_skill = 7
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_07 }
			}
			else_if = {
				limit = { 
					ruler = {
						has_base_skill = 9
					}
				}
				add_skill = 8
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_08 }
			}
			else_if = {
				limit = { 
					ruler = {
						has_base_skill > 9
					}
				}
				add_skill = 9
				add_trait = { show_message = no trait  = rikk_mdlc_trait_leader_ai_splitting_09 }
			}
			set_leader_flag = ai_splitting_leader_flag
		}
	}
}
